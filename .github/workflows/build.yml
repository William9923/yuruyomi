name: "Build"
on:
  push:
    branches:
      - main
  pull_request:
permissions:
  contents: write
  issues: write
  pull-requests: write
jobs:
  build:
    runs-on: ubuntu-latest
    environment: Prod
    strategy:
      matrix:
        target: ["aarch64", "desktop", "kindle", "kindlehf"]
    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
    - uses: cachix/install-nix-action@v31
    - uses: cachix/cachix-action@v16
      with:
        name: yuruyomi
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        extraPullNames: devenv
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "lts/*"
    - name: Get next version
      run: |
        npm install -D semantic-release-export-data
        npx semantic-release --dry-run
      id: get-next-version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Build plugin
      run: |
        export SEMANTIC_RELEASE_VERSION="${{ steps.get-next-version.outputs.new-release-git-tag }}"
        # Using `--impure` here kinda sucks, but it's needed so that we can insert the `semantic-release`
        # version into the build.
        nix build --impure .#${{ matrix.target }} -o build/yuruyomi.koplugin
    - name: Package plugin contents
      run: "cd build && zip -r yuruyomi-${{ matrix.target }}.zip yuruyomi.koplugin"
    - name: Upload plugin as workflow artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }} build
        path: build/yuruyomi-${{ matrix.target }}.zip

  generate-settings-schema:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v31
    - uses: cachix/cachix-action@v16
      with:
        name: yuruyomi
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        extraPullNames: devenv
    - name: Build settings schema
      run: "nix build .#yuruyomi.settings-schema -o build/settings.schema.json"
    - name: Upload plugin as workflow artifact
      uses: actions/upload-artifact@v4
      with:
        name: settings.schema.json
        path: build/settings.schema.json

  release:
    runs-on: ubuntu-latest
    needs: [build, generate-settings-schema]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "lts/*"
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: build
        merge-multiple: true
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        npm install -D semantic-release-export-data
        npx semantic-release
